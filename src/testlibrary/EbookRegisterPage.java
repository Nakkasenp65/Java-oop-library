/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package testlibrary;

import com.mysql.cj.jdbc.result.ResultSetMetaData;
import java.sql.ResultSet;
//import java.sql.ResultSetMetaData;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nakka
 */
public class EbookRegisterPage extends javax.swing.JFrame {

    /**
     * Creates new form EbookRegisterPage
     */
    Connection con;
    PreparedStatement pst;
    ResultSet rs;

    public EbookRegisterPage() {
        initComponents();
        con = DB_Connection.dbConnection();
        cmbGenre.setEnabled(false);
        cmbGenre.setEditable(false);
        cmbGenre.setSelectedIndex(-1);
        LoadProductNo();

    }
    
    
    public void LoadProductNo() {

        int c;

        try {
            pst = con.prepareStatement("SELECT * FROM ebook");
            rs = pst.executeQuery();

            java.sql.ResultSetMetaData rsd = rs.getMetaData();
            c = rsd.getColumnCount();

            DefaultTableModel d = (DefaultTableModel) resultTable.getModel();
            d.setRowCount(0);

            while (rs.next()) {

                Vector v2 = new Vector();

                for (int i = 1; i <= c; i++) {
                    v2.add(rs.getString("bookID"));
                    v2.add(rs.getString("bookName"));
                    v2.add(rs.getString("bookAuthor"));
                    v2.add(rs.getString("bookType"));
                    v2.add(rs.getString("genre"));
                    v2.add(rs.getString("subject"));
                    v2.add(rs.getDouble("price"));
                }

                d.addRow(v2);
            }

        } catch (SQLException ex) {
            Logger.getLogger(EbookRegisterPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtBookName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtAuthor = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbBookType = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        cmbGenre = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cmbSubject = new javax.swing.JComboBox<>();
        btnDelete = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Book name");

        jLabel3.setText("Book author");

        jLabel4.setText("Genre");

        cmbBookType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Journal", "Book" }));
        cmbBookType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBookTypeActionPerformed(evt);
            }
        });

        btnAdd.setText("Add Ebook");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Author", "bookType", "Genre", "Subject", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        resultTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(resultTable);

        jLabel5.setText("Book type");

        cmbGenre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Non-fiction", "Comic", "Novel", "Study-material" }));

        jLabel6.setText("Subject");

        cmbSubject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Science", "History", "Math", "Language", "Engineer", "Psychology", "Social" }));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbBookType, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBookName, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDelete))
                            .addComponent(cmbSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                .addGap(32, 32, 32))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmbBookType, cmbGenre, cmbSubject, txtAuthor, txtBookName});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel2, jLabel3, jLabel4, jLabel5, jLabel6});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBookName)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAuthor)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel3)))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel5))
                            .addComponent(cmbBookType))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel4))
                            .addComponent(cmbGenre))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel6))
                            .addComponent(cmbSubject))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addGap(16, 16, 16))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        boolean isEmpty = false;
        if (txtBookName.getText().equals("")) {
            isEmpty = true;
        }
        if (txtAuthor.getText().equals("")) {
            isEmpty = true;
        }
//        if (txtGenre.getText().equals("")) {
//            isEmpty = true;
//        }
        if (isEmpty) {
            JOptionPane.showMessageDialog(null, "Please fill all information");
        } else {
            try {

                String bookName = txtBookName.getText();
                String bookAuthor = txtAuthor.getText();
                String genre = "";
                String bookSubject = "";
                if (cmbGenre.isEditable() && cmbGenre.isEnabled() && !(cmbGenre.getSelectedIndex() == -1)) {
                    genre = cmbGenre.getSelectedItem().toString();
                }

                Object obj = cmbBookType.getSelectedItem();
                String bookType = obj.toString().toUpperCase();

                if (cmbSubject.isEditable() && cmbSubject.isEnabled() && !(cmbSubject.getSelectedIndex() == -1)) {
                    bookSubject = (String) cmbSubject.getSelectedItem();
                }

                double price;

                switch (bookType) {

                    case "JOURNAL":
                        Journal journal = new Journal(0, bookName, bookAuthor, bookSubject);
                        genre = "Journal";
                        price = 5;
                        break;
                    case "BOOK":
                        Book book = new Book(0, bookName, bookAuthor, genre);
                        price = 10;
                        bookSubject = "None";
                        break;
                    default:
                        Ebook ebook = new Ebook(0, bookName, bookAuthor, genre, 0);
//                JOptionPane.showMessageDialog(null, ebook);
                        price = 0;
                        break;
                }

                pst = con.prepareStatement("INSERT INTO ebook (bookName, bookAuthor, bookType, genre, subject, price) VALUES (?,?,?,?,?,?)");
                pst.setString(1, bookName);
                pst.setString(2, bookAuthor);
                pst.setString(3, bookType);
                pst.setString(4, genre);
                pst.setString(5, bookSubject);
                pst.setDouble(6, price);
                pst.execute();
                JOptionPane.showMessageDialog(null, "Add Ebook success...");
                LoadProductNo();

            } catch (SQLException ex) {
                Logger.getLogger(EbookRegisterPage.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void cmbBookTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBookTypeActionPerformed
        // TODO add your handling code here:
        String booktype = cmbBookType.getSelectedItem().toString().toUpperCase();
        switch (booktype) {
            case "JOURNAL":
                cmbGenre.setEnabled(false);
                cmbGenre.setEditable(false);
                cmbSubject.setEnabled(true);
                cmbSubject.setEditable(true);
                cmbGenre.setSelectedIndex(-1);
                break;

            case "BOOK":
                cmbGenre.setEnabled(true);
                cmbGenre.setEditable(true);
                cmbSubject.setEnabled(false);
                cmbSubject.setEditable(false);
                cmbSubject.setSelectedIndex(-1);
                break;
        }
    }//GEN-LAST:event_cmbBookTypeActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel d1 = (DefaultTableModel) resultTable.getModel();
        int selectIndex = resultTable.getSelectedRow();

        int id = Integer.parseInt(d1.getValueAt(selectIndex, 0).toString());
        try {
            pst = con.prepareStatement("delete from ebook where bookID=?");
            pst.setInt(1, id);

            int k = pst.executeUpdate();

            if (k == 1) {
                JOptionPane.showMessageDialog(this, "Delete Ebook success...");
                txtBookName.setText("");
                txtAuthor.setText("");
                LoadProductNo();

            } else {
                JOptionPane.showMessageDialog(this, "Error try again!!!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(EbookRegisterPage.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void resultTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel d1 = (DefaultTableModel) resultTable.getModel();
        int selectIndex = resultTable.getSelectedRow();

        int id = Integer.parseInt(d1.getValueAt(selectIndex, 0).toString());

        txtBookName.setText(d1.getValueAt(selectIndex, 1).toString());
        txtAuthor.setText(d1.getValueAt(selectIndex, 2).toString());

        String bookType = d1.getValueAt(selectIndex, 3).toString();
        if (bookType.equalsIgnoreCase("Journal")) {
            cmbBookType.setSelectedIndex(0);
            cmbGenre.setSelectedIndex(-1);
            cmbSubject.setSelectedItem(d1.getValueAt(selectIndex, 5).toString());
        } else {
            cmbBookType.setSelectedIndex(1);
            cmbSubject.setSelectedIndex(-1);
            cmbGenre.setSelectedItem(d1.getValueAt(selectIndex, 4).toString());
        }
//        cmbBookType.setSelectedItem(d1.getValueAt(selectIndex,3).toString());


    }//GEN-LAST:event_resultTableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AdminMainMenuPage a = new AdminMainMenuPage();
        a.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EbookRegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EbookRegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EbookRegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EbookRegisterPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EbookRegisterPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JComboBox<String> cmbBookType;
    private javax.swing.JComboBox<String> cmbGenre;
    private javax.swing.JComboBox<String> cmbSubject;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable resultTable;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtBookName;
    // End of variables declaration//GEN-END:variables
}
